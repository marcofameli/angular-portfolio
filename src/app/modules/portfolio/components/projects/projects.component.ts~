import {Component, inject, signal} from '@angular/core';
import {IProjects} from "../../interface/IProjects.interface";
import {MatDialog, MatDialogModule} from "@angular/material/dialog";
import {EDialogPanelClass} from "../../enum/EDialogPanelClass.enum";
import {DialogProjectsComponent} from "../dialog/dialog-projects/dialog-projects.component";


@Component({
  selector: 'app-projects',
  standalone: true,
  imports: [MatDialogModule],
  templateUrl: './projects.component.html',
  styleUrl: './projects.component.scss'
})
export class ProjectsComponent {
  #dialog = inject(MatDialog);

  public arrayProjects = signal<IProjects[]>([
    {
      src: 'assets/img/projects/imagem.png',
      alt: 'Projeto API em Go com GIN',
      title: 'API de Filmes',
      width: '150px',
      height: '150px',
      description: 'Um sistema para o gerenciamento completo de filmes, desenvolvida em Go com o framework Gin. Esta API\n' +
        'permite a criação, atualização, listagem e exclusão de registros em um banco de dados PostgreSQL. Inclui autenticação básica e\n' +
        'está dockerizada para facilitar o uso e a implantação.',
      links: [
        {
          name: "GoMovies",
          href: 'https://github.com/marcofameli/go-movies-api',
        }
      ],
    },
    {
      src: 'assets/img/projects/imagem2.png',
      alt: 'API Transactions',
      title: 'API de Transação com Java',
      width: '125x',
      height: '125px',
      description: 'Um sistema para gerenciamento de transações de uma API RESTful para gerenciamento de empresas e\n' +
        'clientes, utilizando tecnologias Java, Spring Boot, Maven, H2 Database e DTOs. A API permite a realização de operações para\n' +
        'gerenciar transações de uma empresa pro cliente',
      links: [
        {
          name: "Transactions",
          href: 'https://github.com/marcofameli/API-TransactionsSpring',
        }
      ],
    },
    {
      src: 'assets/img/projects/imagem1.png',
      alt: 'Projeto API em Go com JWT ',
      title: 'API DE PRODUTOS EM GO COM TOKENJWT',
      width: '134x',
      height: '134px',
      description: 'Um sistema para gerenciamento de produtos, desenvolvida em Go. A GoFull oferece endpoints para criar, listar,\n' +
        'atualizar e deletar produtos, além de gerenciar usuários e autenticação via JWT. A API foi projetada para ser escalável e segura,\n' +
        'facilitando a integração com diferentes sistemas e aplicações.',
      links: [
        {
          name: "GoFullProducts",
          href: 'https://github.com/marcofameli/api-go-full',
        }
      ],
    },
  ]);

  public openDialog(data: IProjects) {
    this.#dialog.open(DialogProjectsComponent,{
      data,
      panelClass: EDialogPanelClass.PROJETCS
    })

  }

}

